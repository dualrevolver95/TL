/* Generated By:JJTree&JavaCC: Do not edit this line. compConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface compConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASIGNACION = 1;
  /** RegularExpression Id. */
  int PLUS = 2;
  /** RegularExpression Id. */
  int MINUS = 3;
  /** RegularExpression Id. */
  int MULTIPLY = 4;
  /** RegularExpression Id. */
  int DIVIDE = 5;
  /** RegularExpression Id. */
  int INCR = 6;
  /** RegularExpression Id. */
  int DECR = 7;
  /** RegularExpression Id. */
  int VOID = 8;
  /** RegularExpression Id. */
  int MAIN = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int SWITCH = 13;
  /** RegularExpression Id. */
  int CASE = 14;
  /** RegularExpression Id. */
  int BREAK = 15;
  /** RegularExpression Id. */
  int DEFAUL = 16;
  /** RegularExpression Id. */
  int DO = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int WRITE = 19;
  /** RegularExpression Id. */
  int READ = 20;
  /** RegularExpression Id. */
  int RETURN = 21;
  /** RegularExpression Id. */
  int LPAREN = 22;
  /** RegularExpression Id. */
  int RPAREN = 23;
  /** RegularExpression Id. */
  int LBRACE = 24;
  /** RegularExpression Id. */
  int RBRACE = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int SEMICOLON = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int DOT = 30;
  /** RegularExpression Id. */
  int DOUBLECOMMA = 31;
  /** RegularExpression Id. */
  int EQ = 32;
  /** RegularExpression Id. */
  int LE = 33;
  /** RegularExpression Id. */
  int MN = 34;
  /** RegularExpression Id. */
  int LSHIFTB = 35;
  /** RegularExpression Id. */
  int GE = 36;
  /** RegularExpression Id. */
  int GR = 37;
  /** RegularExpression Id. */
  int RSHIFTB = 38;
  /** RegularExpression Id. */
  int NE = 39;
  /** RegularExpression Id. */
  int OR = 40;
  /** RegularExpression Id. */
  int ORB = 41;
  /** RegularExpression Id. */
  int AND = 42;
  /** RegularExpression Id. */
  int ANDB = 43;
  /** RegularExpression Id. */
  int XORB = 44;
  /** RegularExpression Id. */
  int NOTB = 45;
  /** RegularExpression Id. */
  int INT = 46;
  /** RegularExpression Id. */
  int DEC = 47;
  /** RegularExpression Id. */
  int CHR = 48;
  /** RegularExpression Id. */
  int STR = 49;
  /** RegularExpression Id. */
  int NUMBER = 50;
  /** RegularExpression Id. */
  int IDENTIFIER = 51;
  /** RegularExpression Id. */
  int DECIMAL = 52;
  /** RegularExpression Id. */
  int CADENA = 53;
  /** RegularExpression Id. */
  int CARAC = 54;
  /** RegularExpression Id. */
  int DOUBLEPOINT = 55;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"void\"",
    "<MAIN>",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "\"default\"",
    "\"do\"",
    "\"while\"",
    "\"printf\"",
    "\"scanf\"",
    "\"return\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\"==\"",
    "\"<=\"",
    "\"<\"",
    "\"<<\"",
    "\">=\"",
    "\">\"",
    "\">>\"",
    "\"!=\"",
    "\"||\"",
    "\"|\"",
    "\"&&\"",
    "\"&\"",
    "\"^\"",
    "\"~\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"string\"",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARAC>",
    "\":\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<token of kind 61>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 64>",
  };

}
